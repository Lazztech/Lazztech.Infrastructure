---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: matrix-deployment
  labels:
    app: matrix
spec:
  replicas: 1
  selector:
    matchLabels:
      app: matrix
  template:
    metadata:
      labels:
        app: matrix
    spec:
      initContainers:
        - name: matrix-init-config
          image: matrixdotorg/synapse:v1.49.2
          args: ["generate"]
          env:
          - name: SYNAPSE_SERVER_NAME
            value: "matrix.lazz.tech"
          - name: SYNAPSE_REPORT_STATS
            value: "no"
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          volumeMounts:
          - mountPath: /data
            name: matrix-data
            subPath: data
      containers:
        - name: matrix-synapse-server
          image: matrixdotorg/synapse:v1.49.2
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          volumeMounts:
          - mountPath: /data
            name: matrix-data
            subPath: data
          imagePullPolicy: IfNotPresent
        - name: matrix-element-web
          image: vectorim/element-web:v1.9.8
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "64Mi"
              cpu: "100m"
          volumeMounts:
          - mountPath: app/config.json
            name: matrix-config
            subPath: client-config.json
          imagePullPolicy: IfNotPresent
      volumes:
      - name: matrix-config
        configMap:
          name: matrix-config
          items:
            - key: client-config.json
              path: client-config.json
      - name: matrix-data
        persistentVolumeClaim:
          claimName: matrix-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: matrix-pvc
  namespace: default
  labels:
    app: matrix
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: matrix-service
  labels:
    app: matrix
spec:
  ports:
  - port: 8008
    targetPort: 8008
    name: server
  - port: 80
    targetPort: 80
    name: client
  - port: 5000
    targetPort: 5000
    name: registration
  selector:
    app: matrix
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: matrix-element-web-ingress
  labels:
    app: matrix
  annotations:
    kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/redirect-entry-point: https
spec:
  tls:
    - secretName: internal-acme-crt-secret
      hosts:
        - '*.internal.lazz.tech'
  rules:
  - host: matrix.internal.lazz.tech
    http:
      paths:
      - backend:
          serviceName: matrix-service
          servicePort: server
  - host: matrix.lazz.tech
    http:
      paths:
      - backend:
          serviceName: matrix-service
          servicePort: server
  - host: chat.internal.lazz.tech
    http:
      paths:
      - backend:
          serviceName: matrix-service
          servicePort: client
  - host: chat.lazz.tech
    http:
      paths:
      - backend:
          serviceName: matrix-service
          servicePort: client
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: matrix-config
  labels:
    app: matrix
data:
  client-config.json: |
    {
        "default_server_config": {
            "m.homeserver": {
                "base_url": "https://matrix.lazz.tech",
                "server_name": "lazz.tech"
            },
            "m.identity_server": {
                "base_url": "https://vector.im"
            }
        },
        "disable_custom_urls": false,
        "disable_guests": false,
        "disable_login_language_selector": false,
        "disable_3pid_login": false,
        "brand": "Element",
        "integrations_ui_url": "https://scalar.vector.im/",
        "integrations_rest_url": "https://scalar.vector.im/api",
        "integrations_widgets_urls": [
            "https://scalar.vector.im/_matrix/integrations/v1",
            "https://scalar.vector.im/api",
            "https://scalar-staging.vector.im/_matrix/integrations/v1",
            "https://scalar-staging.vector.im/api",
            "https://scalar-staging.riot.im/scalar/api"
        ],
        "bug_report_endpoint_url": "https://element.io/bugreports/submit",
        "defaultCountryCode": "GB",
        "showLabsSettings": false,
        "features": {
            "feature_new_spinner": false
        },
        "default_federate": true,
        "default_theme": "dark",
        "roomDirectory": {
            "servers": [
                "matrix.org"
            ]
        },
        "piwik": {
            "url": "https://piwik.riot.im/",
            "whitelistedHSUrls": ["https://matrix.org"],
            "whitelistedISUrls": ["https://vector.im", "https://matrix.org"],
            "siteId": 1
        },
        "enable_presence_by_hs_url": {
            "https://matrix.org": false,
            "https://matrix-client.matrix.org": false
        },
        "settingDefaults": {
            "breadcrumbs": true
        },
        "jitsi": {
            "preferredDomain": "jitsi.riot.im"
        }
    }