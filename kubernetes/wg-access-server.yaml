---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wg-access-server-deployment
  labels:
    app: wg-access-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wg-access-server
  template:
    metadata:
      labels:
        app: wg-access-server
    spec:
      # needed for port forwarding wireguard 51820 port
      hostNetwork: true
      # needed to allow access to cluster's internal dns for services
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: wg-access-server
          image: place1/wg-access-server:v0.4.6
          securityContext:
            privileged: true
            capabilities:
              add: ["NET_ADMIN"]
          env:
          - name: WG_WIREGUARD_PRIVATE_KEY
            valueFrom:
              secretKeyRef:
                name: wireguard
                key: private-key
          - name: WG_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: admin
                key: password
          - name: WG_EXTERNAL_HOST
            value: vpn.lazz.tech
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
          # this gets used in conjunction to "hostNetwork: true" to expose port 51820 from the container
          - containerPort: 51820
            protocol: UDP
          volumeMounts:
          - mountPath: /data
            name: wg-access-server-data
            subPath: data
          - mountPath: /config.yaml
            name: wg-access-server-config
            subPath: config.yaml
          - mountPath: /dev/net/tun
            name: tun
          imagePullPolicy: IfNotPresent
      volumes:
      - name: wg-access-server-data
        persistentVolumeClaim:
          claimName: wg-access-server-pvc
      - name: wg-access-server-config
        configMap:
          name: wg-access-server-config
          items:
            - key: config.yaml
              path: config.yaml
      - name: tun
        hostPath:
          path: /dev/net/tun
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wg-access-server-pvc
  namespace: default
  labels:
    app: wg-access-server
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: wg-access-server-service
  labels:
    app: wg-access-server
spec:
  ports:
  - port: 80
    targetPort: 8000
    name: tcp
  - port: 51820
    targetPort: 51820
    name: wireguard
    protocol: UDP
  selector:
    app: wg-access-server
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: wg-access-server-ingress
  labels:
    app: wg-access-server
  annotations:
    kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/redirect-entry-point: https
spec:
  tls:
    - secretName: internal-acme-crt-secret
      hosts:
        - '*.internal.lazz.tech'
  rules:
  - host: wireguard.internal.lazz.tech
    http:
      paths:
      - backend:
          serviceName: wg-access-server-service
          servicePort: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: wg-access-server-config
  labels:
    app: wg-access-server
data:
  config.yaml: |
    loglevel: debug