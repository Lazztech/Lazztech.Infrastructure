---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: piped-deployment
  labels:
    app: piped
spec:
  replicas: 1
  selector:
    matchLabels:
      app: piped
  template:
    metadata:
      labels:
        app: piped
    spec:
      containers:
        - name: piped-frontend
          image: 1337kavin/piped-frontend:latest
          resources:
            requests:
              memory: "128Mi"
              cpu: "128m"
            limits:
              memory: "128Mi"
              cpu: "128m"
          env:
            - name: BACKEND_HOSTNAME
              value: pipedapi.lazz.tech
        - name: piped-proxy
          image: 1337kavin/piped-proxy:latest
          resources:
            requests:
              memory: "128Mi"
              cpu: "128m"
            limits:
              memory: "128Mi"
              cpu: "128m"
        - name: piped
          image: 1337kavin/piped:latest
          resources:
            requests:
              memory: "512Mi"
              cpu: "512m"
            limits:
              memory: "512Mi"
              cpu: "512m"
          # env:
          #   - name: "hibernate.connection.url"
          #     value: "postgresql://postgres.default.svc.cluster.local/piped"
          #   - name: hibernate.connection.username
          #     value: postgres
          #   - name: hibernate.connection.password
          #     valueFrom:
          #       secretKeyRef:
          #         name: admin
          #         key: password
          volumeMounts:
            - mountPath: /app/config.properties
              name: piped-config
              subPath: config.properties
          imagePullPolicy: IfNotPresent
      volumes:
      - name: piped-config
        configMap:
          name: piped-config
          items:
            - key: config.properties
              path: config.properties
---
apiVersion: v1
kind: Service
metadata:
  name: piped-service
  labels:
    app: piped
spec:
  ports:
  - port: 80
    targetPort: 80
    name: http
  - port: 443
    targetPort: 443
    name: https
  selector:
    app: piped
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: piped-ingress
  labels:
    app: piped
  annotations:
    kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/redirect-entry-point: https
spec:
  tls:
    - secretName: internal-acme-crt-secret
      hosts:
        - '*.internal.lazz.tech'
  rules:
  - host: piped.internal.lazz.tech
    http:
      paths:
      - backend:
          serviceName: piped-service
          servicePort: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: piped-config
  labels:
    app: piped
data:
  config.properties: |
    # Hibernate properties
    hibernate.connection.url:jdbc:postgresql://postgres.default.svc.cluster.local:5432/piped
    hibernate.connection.driver_class:org.postgresql.Driver
    hibernate.dialect:org.hibernate.dialect.PostgreSQLDialect
    hibernate.connection.username:postgres
    hibernate.connection.password:asdf

    # Frontend configuration
    #frontend.statusPageUrl:changeme
    #frontend.donationUrl:changeme