---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: piped-deployment
  labels:
    app: piped
spec:
  replicas: 1
  selector:
    matchLabels:
      app: piped
  template:
    metadata:
      labels:
        app: piped
    spec:
      containers:
        - name: piped-frontend
          image: 1337kavin/piped-frontend:latest
          resources:
            requests:
              memory: "128Mi"
              cpu: "128m"
            limits:
              memory: "128Mi"
              cpu: "128m"
          env:
            - name: BACKEND_HOSTNAME
              value: pipedapi.lazz.tech
        - name: piped-proxy
          image: 1337kavin/piped-proxy:latest
          resources:
            requests:
              memory: "128Mi"
              cpu: "128m"
            limits:
              memory: "128Mi"
              cpu: "128m"
        - name: piped
          image: 1337kavin/piped:latest
          resources:
            requests:
              memory: "512Mi"
              cpu: "512m"
            limits:
              memory: "512Mi"
              cpu: "512m"
          env:
            - name: POSTGRES_HOST
              value: postgres.default.svc.cluster.local
            - name: POSTGRES_DB
              value: piped
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: admin
                  key: password
          volumeMounts:
            - mountPath: /app/config.properties
              name: piped-config
              subPath: config.properties
          imagePullPolicy: IfNotPresent
      volumes:
      - name: piped-config
        configMap:
          name: piped-config
          items:
            - key: config.properties
              path: config.properties
---
apiVersion: v1
kind: Service
metadata:
  name: piped-service
  labels:
    app: piped
spec:
  ports:
  - port: 80
    targetPort: 80
    name: http
  - port: 443
    targetPort: 443
    name: https
  selector:
    app: piped
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: piped-ingress
  labels:
    app: piped
  annotations:
    kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/redirect-entry-point: https
spec:
  tls:
    - secretName: internal-acme-crt-secret
      hosts:
        - '*.internal.lazz.tech'
  rules:
  - host: piped.internal.lazz.tech
    http:
      paths:
      - backend:
          serviceName: piped-service
          servicePort: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: piped-config
  labels:
    app: piped
data:
  config.properties: |
    # The port to Listen on.
    PORT: 8080

    # The number of workers to use for the server
    HTTP_WORKERS: 2

    # Proxy
    PROXY_PART: https://PROXY_HOSTNAME

    # Outgoing HTTP Proxy - eg: 127.0.0.1:8118
    #HTTP_PROXY: 127.0.0.1:8118

    # Captcha Parameters
    CAPTCHA_BASE_URL: https://api.capmonster.cloud/
    CAPTCHA_API_KEY: INSERT_HERE

    # Public API URL
    API_URL: https://BACKEND_HOSTNAME

    # Public Frontend URL
    FRONTEND_URL: https://FRONTEND_HOSTNAME

    # Enable haveibeenpwned compromised password API
    COMPROMISED_PASSWORD_CHECK: true

    # Disable Registration
    DISABLE_REGISTRATION: false

    # Feed Retention Time in Days
    FEED_RETENTION: 30

    # Disable CPU expensive timers (for nodes with low CPU, at least one node should have this disabled)
    DISABLE_TIMERS:false

    # RYD Proxy URL (see https://github.com/TeamPiped/RYD-Proxy)
    RYD_PROXY_URL:https://ryd-proxy.kavin.rocks

    # SponsorBlock Servers(s)
    # Comma separated list of SponsorBlock Servers to use
    SPONSORBLOCK_SERVERS:https://sponsor.ajay.app,https://sponsorblock.kavin.rocks

    # Disable the usage of RYD
    DISABLE_RYD:false

    # Disable API server (node just runs timers if enabled)
    DISABLE_SERVER:false

    # Disable the inclusion of LBRY streams
    DISABLE_LBRY:false

    # How long should unauthenticated subscriptions last for
    SUBSCRIPTIONS_EXPIRY:30

    # Send consent accepted cookie
    # This is required for certain features to work in some countries
    CONSENT_COOKIE:true

    # Sentry DSN
    # Use Sentry to log errors and trace performance
    #SENTRY_DSN:INSERT_HERE

    # Matrix Client Server URL
    MATRIX_SERVER:https://matrix-client.matrix.org
    # Matrix Access Token
    # If not present, will work in anon mode
    #MATRIX_TOKEN:INSERT_HERE

    # Geo Restriction Checker for federated bypassing of Geo Restrictions
    #GEO_RESTRICTION_CHECKER_URL:INSERT_HERE

    # S3 Configuration Data (compatible with any provider that offers an S3 compatible API)
    #S3_ENDPOINT:INSERT_HERE
    #S3_ACCESS_KEY:INSERT_HERE
    #S3_SECRET_KEY:INSERT_HERE
    #S3_BUCKET:INSERT_HERE

    # Hibernate properties
    hibernate.connection.url:jdbc:postgresql://postgres.default.svc.cluster.local:5432/piped
    hibernate.connection.driver_class:org.postgresql.Driver
    hibernate.dialect:org.hibernate.dialect.PostgreSQLDialect
    hibernate.connection.username:postgres
    hibernate.connection.password:changeme

    # Frontend configuration
    #frontend.statusPageUrl:changeme
    #frontend.donationUrl:changeme