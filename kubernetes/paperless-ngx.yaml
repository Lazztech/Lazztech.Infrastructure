---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless-ngx-deployment
  labels:
    app: paperless-ngx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-ngx
  template:
    metadata:
      labels:
        app: paperless-ngx
    spec:
      containers:
        - name: paperless-ngx
          image: linuxserver/paperless-ngx
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: PAPERLESS_DBHOST
              value: postgres.default.svc.cluster.local
            - name: PAPERLESS_DBNAME
              value: paperless
            - name: PAPERLESS_DBUSER
              value: postgres
            - name: PAPERLESS_DBPASS
              valueFrom:
                secretKeyRef:
                  name: admin
                  key: password
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "100m"
          volumeMounts:
          - mountPath: /config
            name: paperless-ngx-data
            subPath: config
          - mountPath: /data
            name: paperless-ngx-data
            subPath: data
          imagePullPolicy: IfNotPresent
      volumes:
      - name: paperless-ngx-data
        persistentVolumeClaim:
          claimName: paperless-ngx-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperless-ngx-pvc
  namespace: default
  labels:
    app: paperless-ngx
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: paperless-ngx-service
  labels:
    app: paperless-ngx
spec:
  ports:
  - port: 80
    targetPort: 8000
    name: tcp
  selector:
    app: paperless-ngx
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: paperless-ngx-ingress
  labels:
    app: paperless-ngx
  annotations:
    kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/redirect-entry-point: https
spec:
  tls:
    - secretName: internal-acme-crt-secret
      hosts:
        - '*.internal.lazz.tech'
  rules:
  - host: paperless.internal.lazz.tech
    http:
      paths:
      - backend:
          serviceName: paperless-ngx-service
          servicePort: 80