---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin-deployment
  labels:
    app: jellyfin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      # needed for client & service discovery
      hostNetwork: true
      # needed to allow access to cluster's internal dns for services
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: jellyfin
          image: linuxserver/jellyfin:10.8.0
          env:
            - name: TZ
              value: America/Los_Angeles
          resources:
            requests:
              cpu: 100m
              memory: 100M
            limits:
              cpu: 3000m
              memory: 1000M
          volumeMounts:
          - mountPath: /config
            name: jellyfin-data
            subPath: config
          imagePullPolicy: IfNotPresent
        - name: samba
          image: dperson/samba
          env:
            - name: TZ
              value: America/Los_Angeles
            - name: WORKGROUP
              value: workgroup
            - name: USER
              value: admin;admin
            - name: RECYCLE
              value: "false"
            - name: SHARE
              value: Mount;/mount;yes;no;no;;gerben 
          resources:
            requests:
              cpu: 100m
              memory: 100M
            limits:
              cpu: 100m
              memory: 100M
          volumeMounts:
          - mountPath: /mount
            name: jellyfin-data
            subPath: config
          imagePullPolicy: IfNotPresent
      volumes:
      - name: jellyfin-data
        persistentVolumeClaim:
          claimName: jellyfin-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-pvc
  namespace: default
  labels:
    app: jellyfin
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin-service
  labels:
    app: jellyfin
spec:
  ports:
  - port: 80
    targetPort: 8096
    name: tcp
  selector:
    app: jellyfin
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: jellyfin-ingress
  labels:
    app: jellyfin
  annotations:
    kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/redirect-entry-point: https
spec:
  tls:
    - secretName: internal-acme-crt-secret
      hosts:
        - '*.internal.lazz.tech'
  rules:
  - host: jellyfin.internal.lazz.tech
    http:
      paths:
      - backend:
          serviceName: jellyfin-service
          servicePort: 80
  - host: jellyfin.lazz.tech
    http:
      paths:
      - backend:
          serviceName: jellyfin-service
          servicePort: 80