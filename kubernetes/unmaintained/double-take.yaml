---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: double-take-deployment
  labels:
    app: double-take
spec:
  replicas: 1
  selector:
    matchLabels:
      app: double-take
  template:
    metadata:
      labels:
        app: double-take
    spec:
      containers:
        - name: double-take
          image: jakowenko/double-take
          env:
            - name: DETECTORS
              value: deepstack
            - name: FRIGATE_URL
              value: frigate-service.default.svc.cluster.local
            - name: DEEPSTACK_URL
              value: deepstack-service.default.svc.cluster.local
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          volumeMounts:
          - mountPath: /.storage
            name: double-take-data
            subPath: .storage
          imagePullPolicy: IfNotPresent
      volumes:
      - name: double-take-data
        persistentVolumeClaim:
          claimName: double-take-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: double-take-pvc
  namespace: default
  labels:
    app: double-take
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: double-take-service
  labels:
    app: double-take
spec:
  ports:
  - port: 80
    targetPort: 3000
    name: tcp
  selector:
    app: double-take
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: double-take-ingress
  labels:
    app: double-take
  annotations:
    kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/redirect-entry-point: https
spec:
  tls:
    - secretName: internal-acme-crt-secret
      hosts:
        - '*.internal.lazz.tech'
  rules:
  - host: double-take.internal.lazz.tech
    http:
      paths:
      - backend:
          serviceName: double-take-service
          servicePort: 80